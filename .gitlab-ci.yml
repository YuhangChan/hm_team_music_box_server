## This file is a template, and might need editing before it works on your project.
## This is a sample GitLab CI/CD configuration file that should run without any modifications.
## It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
## it uses echo commands to simulate the pipeline execution.
##
## A pipeline is composed of independent jobs that run scripts, grouped into stages.
## Stages run in sequential order, but jobs within stages run in parallel.
##
## For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
##
## You can copy and paste this template into a new `.gitlab-ci.yml` file.
## You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
##
## To contribute improvements to CI/CD templates, please follow the Development guide at:
## https://docs.gitlab.com/ee/development/cicd/templates.html
## This specific template is located at:
## https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml
#
#stages:          # List of stages for jobs, and their order of execution
#  - deploy
#
#deploy-job:      # This job runs in the deploy stage.
#  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#  image: docker:20.10.12
#  services:
#    - name: 'docker:20.10.12-dind'
#      command: [ '--tls=false', '--host=tcp://0.0.0.0:2375' ]
#  variables:
#    DOCKER_DRIVER: overlay2
#    DOCKER_CERT_PATH: ""
#    DOCKER_TLS_CERTDIR: ""
#    DOCKER_TLS_VERIFY: ""
#    DOCKER_SOCKET_PATH: /var/run/docker.sock
#  environment: production
#  script:
#    - export DOCKER_HOST='tcp://localhost:2375'
#    - docker build -t music-box:latest .


default:
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - docker info

variables:
  # When using dind service, you must instruct docker to talk with the
  # daemon started inside of the service. The daemon is available with
  # a network connection instead of the default /var/run/docker.sock socket.
  #
  # The 'docker' hostname is the alias of the service container as described at
  # https://docs.gitlab.com/ee/ci/docker/using_docker_images.html#accessing-the-services
  #
  # If you're using GitLab Runner 12.7 or earlier with the Kubernetes executor and Kubernetes 1.6 or earlier,
  # the variable must be set to tcp://localhost:2375 because of how the
  # Kubernetes executor connects services to the job container
  # DOCKER_HOST: tcp://localhost:2375
  #
  DOCKER_HOST: tcp://docker:2375
  #
  # This instructs Docker not to start over TLS.
  DOCKER_TLS_CERTDIR: ""

build:
  stage: build
  script:
    - docker build -t my-docker-image .